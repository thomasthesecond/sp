@import "../../../assets/scss/design-tokens";
@import "../../../assets/scss/functions";
@import "../../../assets/scss/mixins";

@function column-width($value) {
  @return #{($value / $max-width) * 100%};
}

$image-margin: 21;
$image-width: 301;
$location-margin: 114;
$location-width: 341;
$location-container-width: ($location-width + $location-margin + $image-width + $image-margin);
$contact-margin: 97;
$contact-padding: 109;
$contact-width: 306;

$location-column-width: column-width($location-container-width);
$contact-column-margin: column-width($contact-margin);
$contact-column-width: column-width(($contact-width + $contact-padding));

.Contentinfo {
  @include fluid-type(
    $min-font-size: 12,
    $max-font-size: 16,
    $min-width: 700
  );

  background-color: $color-background-footer;
  color: rgba($color-text-overlay, $opacity-57);
  line-height: (24 / 12);
  padding-top: 64px;

  @media (min-width: $mq-min-800) {
    line-height: (28 / $font-size-default);
    padding-top: 110px;
  }
}

.Contentinfo .container {
  overflow: hidden;

  @supports (display: grid) {
    @media (min-width: $mq-min-800) {
      display: grid;
      grid-template-areas: "location . contact";
      grid-template-columns:
        $location-column-width
        $contact-column-margin
        $contact-column-width;
    }
  }
}

.Contentinfo h4 {
  @include fluid-type(
    $min-font-size: $font-size-default,
    $max-font-size: $font-size-heading-2
  );

  color: $color-text-overlay;
  font-weight: $font-weight-semibold;
  line-height: $line-height-reset;
  margin-bottom: 0;
  margin-top: 0;
}

.Contentinfo a:not(.Button) {
  color: inherit;
  text-decoration: none;
  transition: color $timing-fast;

  &:hover,
  &:active,
  &:focus {
    color: rgba($color-text-overlay, $opacity-77);
  }
}

.Contentinfo-location {
  @media (min-width: $mq-min-800) {
    align-items: flex-end;
    display: flex;
    flex-direction: column;
    float: left;
    position: relative;
    width: $location-column-width;
  }

  @supports (display: grid) {
    grid-area: location;

    @media (min-width: $mq-min-800) {
      align-items: flex-start;
      display: grid;
      float: none;
      grid-column-gap: #{($location-margin / $location-container-width) * 100%};
      grid-template-columns:
        #{(($image-width + $image-margin) / $location-container-width) * 100%}
        #{($location-width / $location-container-width) * 100%};
      width: auto;
    }
  }

  h4 {
    @media (min-width: $mq-min-800) {
      width: #{($location-width / $location-container-width) * 100%};
    }

    @supports (display: grid) {
      grid-column: 2;
      grid-row: 1;

      @media (min-width: $mq-min-800) {
        margin-top: 0;
        width: auto;
      }
    }
  }

  img {
    display: block;
    max-width: #{$image-width}px;
    width: 100%;

    @media (max-width: $mq-max-800) {
      margin-top: 32px;
    }

    @media (min-width: $mq-min-800) {
      align-self: flex-start;
      left: 0;
      margin-left: #{($image-margin / $location-container-width) * 100%};
      max-width: 100%;
      order: -1;
      position: absolute;
      width: #{($image-width / $location-container-width) * 100%};
    }

    @supports (display: grid) {
      grid-column: 1;
      grid-row: 1 / 4;

      @media (min-width: $mq-min-800) {
        margin-left: auto;
        order: 0;
        position: static;
        width: #{$image-width}px;
      }
    }
  }

  p {
    margin-bottom: 0;
    margin-top: 23px;

    @media (max-width: $mq-max-800) {
      display: none;
    }

    @media (min-width: $mq-min-800) {
      width: #{($location-width / $location-container-width) * 100%};
    }

    @supports (display: grid) {
      grid-column: 2;
      grid-row: 2;

      @media (min-width: $mq-min-800) {
        width: auto;
      }
    }
  }

  select,
  .Button {
    font-size: inherit;
    margin-top: 40px;
    width: 100%;

    @media (min-width: $mq-min-650) {
      width: 50%;
    }

    @media (min-width: $mq-min-800) {
      margin-right: #{(($location-width - 332) / $location-container-width) * 100%};
      margin-top: 30px;
      width: #{(332 / $location-container-width) * 100%};
    }

    @supports (display: grid) {
      grid-column: 2;
      grid-row: 3;

      @media (min-width: $mq-min-800) {
        margin-right: 0;
        width: #{(332 / $location-width) * 100%};
      }
    }
  }

  select {
    .no-js & {
      display: none;
    }
  }

  .Button {
    .js & {
      display: none;
    }
  }
}

.Contentinfo-contact {
  line-height: (36 / $font-size-default);

  @media (max-width: $mq-max-800) {
    margin-top: 64px;
  }

  @media (min-width: $mq-min-800) {
    border-left: 1px solid rgba($color-border-default, $opacity-07);
    float: left;
    margin-left: $contact-column-margin;
    padding-left: column-width($contact-padding);
    width: $contact-column-width;
  }

  @supports (display: grid) {
    grid-area: contact;

    @media (min-width: $mq-min-800) {
      float: none;
      margin-left: 0;
      padding-left: #{($contact-padding / ($contact-width + $contact-padding)) * 100%};
      width: auto;
    }
  }
}

.Contentinfo-contact p {
  margin-bottom: 0;
  margin-top: 19px;
}

.Contentinfo-navigation {
  border-top: 1px solid rgba($color-border-default, $opacity-20);
  line-height: $line-height-reset;
  margin-top: 32px;
  padding-bottom: 32px;
  padding-top: 40px;
  width: 100%;

  @media (min-width: $mq-min-650) {
    float: left;
  }

  @media (min-width: $mq-min-650) and (max-width: $mq-max-800) {
    margin-top: 64px;
  }

  @media (min-width: $mq-min-800) {
    margin-top: 129px;
    padding-bottom: 44px;
    padding-top: 42px;
  }

  @media (min-width: $mq-min-980) {
    display: flex;
  }

  @supports (display: grid) {
    grid-column: auto / span 3;

    @media (min-width: $mq-min-650) {
      float: none;
    }
  }
}

.Contentinfo-links {
  @media (max-width: $mq-max-650) {
    overflow: hidden;
  }

  @media (min-width: $mq-min-650) {
    flex: 1 0 auto;
  }

  span {
    @media (max-width: $mq-max-320) {
      display: block;
    }

    @media (min-width: $mq-min-320) and (max-width: $mq-max-650) {
      float: left;
      width: 50%;
    }

    @media (max-width: $mq-max-650) {
      margin-bottom: 40px;
    }

    @media (min-width: $mq-min-650) {
      flex: 1 0 auto;
    }

    &:first-child::before {
      @media (min-width: $mq-min-650) and (max-width: $mq-max-980) {
        margin-left: 0;
        margin-right: 0;
        width: 0;
      }
    }

    &::before {
      @media (min-width: $mq-min-650) {
        background-color: rgba($color-border-default, $opacity-07);
        content: "";
        display: inline-block;
        height: 1em;
        margin-left: #{(20 / $max-width) * 100%};
        margin-right: #{(19 / $max-width) * 100%};
        vertical-align: bottom;
        width: 1px;
      }
    }
  }
}

.Contentinfo-copyright {
  @media (max-width: $mq-max-320) {
    margin-top: 0;
  }

  @media (min-width: $mq-min-320) and (max-width: $mq-max-650) {
    margin-top: 40px;
  }

  @media (max-width: $mq-max-650) {
    border-top: 1px solid rgba($color-border-default, $opacity-20);
    padding-top: 30px;
  }

  @media (min-width: $mq-min-650) {
    display: inline-block;
  }

  @media (min-width: $mq-min-650) and (max-width: $mq-max-980) {
    margin-top: 64px;
  }

  @media (min-width: $mq-min-980) {
    display: inline;
    flex: 0 1 auto;
    order: -1;
  }
}
